{"ast":null,"code":"var _jsxFileName = \"/Users/jedediaharnold/Desktop/small-react-practice/redux-meme-gen-todos-solution/todos/src/TodoList.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector(st => st.todos);\n\n  function handleCreate(task) {\n    dispatch({\n      type: \"ADD_TODO\",\n      task\n    });\n  }\n\n  function handleUpdate(id, updatedTask) {\n    dispatch({\n      type: \"UPDATE_TODO\",\n      id,\n      updatedTask\n    });\n  }\n\n  function handleDelete(id) {\n    dispatch({\n      type: \"REMOVE_TODO\",\n      id\n    });\n  }\n\n  const todosJSX = todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n    deleteTodo: handleDelete,\n    id: todo.id,\n    key: todo.id,\n    task: todo.task,\n    updateTodo: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewTodoForm, {\n    createTodo: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, todosJSX));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jedediaharnold/Desktop/small-react-practice/redux-meme-gen-todos-solution/todos/src/TodoList.js"],"names":["React","useSelector","useDispatch","Todo","NewTodoForm","TodoList","dispatch","todos","st","handleCreate","task","type","handleUpdate","id","updatedTask","handleDelete","todosJSX","map","todo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,KAAK,GAAGN,WAAW,CAACO,EAAE,IAAIA,EAAE,CAACD,KAAV,CAAzB;;AAEA,WAASE,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,UADC;AAEPD,MAAAA;AAFO,KAAD,CAAR;AAID;;AAED,WAASE,YAAT,CAAsBC,EAAtB,EAA0BC,WAA1B,EAAuC;AACrCR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPE,MAAAA,EAFO;AAGPC,MAAAA;AAHO,KAAD,CAAR;AAKD;;AAED,WAASC,YAAT,CAAsBF,EAAtB,EAA0B;AACxBP,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAR;AACD;;AAED,QAAMG,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBAC7B,oBAAC,IAAD;AACE,IAAA,UAAU,EAAEH,YADd;AAEE,IAAA,EAAE,EAAEG,IAAI,CAACL,EAFX;AAGE,IAAA,GAAG,EAAEK,IAAI,CAACL,EAHZ;AAIE,IAAA,IAAI,EAAEK,IAAI,CAACR,IAJb;AAKE,IAAA,UAAU,EAAEE,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAjB;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEH,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,QAAL,CAFF,CADF;AAMD;;AAED,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Todo from \"./Todo\";\nimport NewTodoForm from \"./NewTodoForm\";\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector(st => st.todos);\n\n  function handleCreate(task) {\n    dispatch({\n      type: \"ADD_TODO\",\n      task\n    });\n  }\n\n  function handleUpdate(id, updatedTask) {\n    dispatch({\n      type: \"UPDATE_TODO\",\n      id,\n      updatedTask \n    });\n  }\n  \n  function handleDelete(id) {\n    dispatch({ type: \"REMOVE_TODO\", id });\n  }\n\n  const todosJSX = todos.map(todo => (\n    <Todo\n      deleteTodo={handleDelete}\n      id={todo.id}\n      key={todo.id}\n      task={todo.task}\n      updateTodo={handleUpdate}\n    />\n  ));\n  return (\n    <div>\n      <NewTodoForm createTodo={handleCreate} />\n      <ul>{todosJSX}</ul>\n    </div>\n  );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}