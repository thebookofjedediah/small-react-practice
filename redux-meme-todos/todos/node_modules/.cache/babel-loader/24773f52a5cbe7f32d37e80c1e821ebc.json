{"ast":null,"code":"import uuid from \"uuid/v4\";\nconst INITIAL_STATE = {\n  todos: []\n};\n\nfunction reducer(state = INITIAL_STATE, action) {\n  if (action.type === \"ADD_TODO\") {\n    return { ...state,\n      todos: [...state.todos, {\n        task: action.task,\n        id: uuid()\n      }]\n    };\n  }\n\n  if (action.type === \"UPDATE_TODO\") {\n    const todos = state.todos.map(todo => {\n      if (todo.id === action.id) {\n        return { ...todo,\n          task: action.updatedTask\n        };\n      }\n\n      return todo;\n    });\n    return { ...state,\n      todos\n    };\n  }\n\n  if (action.type === \"REMOVE_TODO\") {\n    return { ...state,\n      todos: state.todos.filter(todo => todo.id !== action.id)\n    };\n  }\n\n  return state;\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jedediaharnold/Desktop/small-react-practice/redux-meme-gen-todos-solution/todos/src/reducer.js"],"names":["uuid","INITIAL_STATE","todos","reducer","state","action","type","task","id","map","todo","updatedTask","filter"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAAtB;;AAIA,SAASC,OAAT,CAAiBC,KAAK,GAACH,aAAvB,EAAsCI,MAAtC,EAA6C;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC5B,WAAO,EAAE,GAAGF,KAAL;AAAYF,MAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB;AAACK,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAAd;AAAoBC,QAAAA,EAAE,EAAER,IAAI;AAA5B,OAAjB;AAAnB,KAAP;AACD;;AACD,MAAIK,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,UAAMJ,KAAK,GAAGE,KAAK,CAACF,KAAN,CAAYO,GAAZ,CAAgBC,IAAI,IAAI;AACpC,UAAIA,IAAI,CAACF,EAAL,KAAYH,MAAM,CAACG,EAAvB,EAA2B;AACzB,eAAO,EAAE,GAAGE,IAAL;AAAWH,UAAAA,IAAI,EAAEF,MAAM,CAACM;AAAxB,SAAP;AACD;;AACD,aAAOD,IAAP;AACD,KALa,CAAd;AAOA,WAAO,EACL,GAAGN,KADE;AACKF,MAAAA;AADL,KAAP;AAGD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAO,EAAE,GAAGF,KAAL;AAAYF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYH,MAAM,CAACG,EAA9C;AAAnB,KAAP;AACD;;AACD,SAAOJ,KAAP;AACD;;AAED,eAAeD,OAAf","sourcesContent":["import uuid from \"uuid/v4\"\n\nconst INITIAL_STATE = {\n  todos: []\n}\n\nfunction reducer(state=INITIAL_STATE, action){\n  if(action.type === \"ADD_TODO\"){\n    return { ...state, todos: [...state.todos, {task: action.task, id: uuid()}] }\n  }\n  if (action.type === \"UPDATE_TODO\") {\n    const todos = state.todos.map(todo => {\n      if (todo.id === action.id) {\n        return { ...todo, task: action.updatedTask };\n      }\n      return todo\n    });\n    \n    return {\n      ...state, todos\n    }\n  }\n  if (action.type === \"REMOVE_TODO\") {\n    return { ...state, todos: state.todos.filter(todo => todo.id !== action.id)}\n  }\n  return state\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}